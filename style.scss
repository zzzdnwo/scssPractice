@import 'global.scss';


$url-sprite: '../img/';

*{list-style: none; margin: 0; padding: 0; @include scrollbar-default}

body{height: 7000px;}
/*mixin 사용하라면 @import 사용*/
@mixin theme ($theme: DarkGray){
    background-color: $theme; width: 33%; height: 170px; filter:  saturate(0%);
}

main{display: flex; justify-content: center;}

$color-base: pink;

//article 안에 &이건 article 이름을 그대로 인용하여 사용할 수 있다.
.article{ 
    width: 30%;
    display:flex;
    flex-wrap: wrap;
    padding: 25px;
    box-sizing: border-box;
    $color-base: pink !default;
    background: $color-base;

    & div{
        @if ($color-base == pink){color: $color-base};
        transition: all 0.5s ease;
        background-image: url('#{$url-sprite}romero.png');
        width: 33%; height: 170px;
    }
    & div:hover{
        filter: blur(4px) saturate(.5);
    }
}

//extend 사용법 (원래 있는걸 가져오면 A랑 똑같은 이런 개념이면 %쓰면 투명 선택자? 대충 그렇게 생각해서 쓸수있다 아 모르겠다)

%btn{
    display: inline-block;
    vertical-align: middle;
    min-width: 60px;
    height: 30px;
    background: saturate(hsl(120, 30%, 90%), 20%);
    color: #000;
}

.btn-white{
    @extend %btn;
    border-radius: 3px;
}

.btn-red{
    @extend %btn;
    opacity: 1;
}

$colors: (failed: red, orange: orange, yellow: yellow, green: green, sucessed: blue, purple: purple);

//each는 리스트 변수에서 state 값과 val값 (이름 내가 막 정해도 됨) 가져와서 클래스로 치면 상태값에 state 넣고 속성값에 내용값을 넣어준다.

@each $state, $val in $colors {
    .article__picture--#{$state} {
        background: #{$val}; filter: blur(4px) saturate(0); cursor: pointer;
    }
}

    .adv__list{
        display: flex; justify-content: center;
    }


@mixin size ($w, $h){
    width: $w;
    height: $h;
}
//scss for문 마지막 요소 뺄라면 through를 to로 바꾸기
@for $i from 1 through 6 {
    .adv__list--item:nth-child(#{$i}){
        @include size(30px,30px);
        background: #000; margin: 10px;
    }
}

